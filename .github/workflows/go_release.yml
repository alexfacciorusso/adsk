name: Create release

on:
  push:
    tags: 'v*'
  workflow_dispatch:
    inputs:
        version:
          description: 'Version'
          required: true

jobs:
  build:
    name: Build
    runs-on: windows-latest
    
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: go build

    - name: Test
      run: go test -v ./...

    - name: Retrieve version
      uses: actions/github-script@v3
      id: retrieve_version
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          var version = github.event.inputs.version 
          if (version == null) {
            version = steps.create_release.outputs.upload_url 
          }
          console.log(version)
          return version

    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.retrieve_version.outputs.result }}
        release_name: Release ${{ steps.retrieve_version.outputs.result }}
        draft: true
        prerelease: true

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: adsk.exe
        asset_name: adsk.exe
        asset_content_type: vnd.microsoft.portable-executable

